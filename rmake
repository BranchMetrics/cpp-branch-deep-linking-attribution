#!/bin/sh
if [ ! -f "./build" ]; then mkdir build; fi

BUILD_CONFIGURATION=$1
if [ "$BUILD_CONFIGURATION" = "" ]
then
  BUILD_CONFIGURATION=Release
fi

cd build
if [ ! -f "./$BUILD_CONFIGURATION" ]; then mkdir "./$BUILD_CONFIGURATION"; fi

cd $BUILD_CONFIGURATION

BUILD_SHARED_LIBS=False
# BUILD_SHARED_LIBS=True # TODO(jdee): Not working

conan install ../../conanfile.py --options "*:shared=$BUILD_SHARED_LIBS"
cmake ../.. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DSKIP_INSTALL_ALL=true -DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS
# 8 threads available for parallel building
cmake --build . -- -j8
if [ $? != 0 ]
then
  echo 'Build failed. Not running unit tests.'
  exit 1
fi

ctest -C $BUILD_CONFIGURATION
if [ $? != 0 ]
then
  echo 'Unit tests failed.'
  exit 1
fi

# Install into the Conan cache
# TODO(jdee): Revert to master branch
# GIT_BRANCH=master
GIT_BRANCH=initial_revision
conan create ../.. branch/testing \
  --json build/${BUILD_CONFIGURATION}/conan-install.json \
  --build outdated \
  --options "*:shared=$BUILD_SHARED_LIBS" \
  --options "BranchIO:git_branch=$GIT_BRANCH" \
  --settings build_type=$BUILD_CONFIGURATION
if [ $? != 0 ]
then
  echo 'conan create failed.'
  exit 1
fi

echo "Building stage from conan cache"
../../BranchSDK/tools/stage.py
if [ $? != 0 ]
then
  echo 'stage.py failed.'
  exit 1
fi

cd ../..

# Lint
pushd .
cd BranchSDK/src
../tools/cpplint.py --linelength=120 --filter=-build/namespaces,-runtime/references --recursive --repository=. ./BranchIO/*.*
if [ $? != 0 ]
then
  echo 'Linting failed.'
  exit 1
fi
popd

# build docs
cd BranchSDK
doxygen
cd ..
