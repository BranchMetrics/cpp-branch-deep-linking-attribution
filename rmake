#!/bin/sh

# rmake [BUILD_TYPE [CONAN_PROFILE [BUILD_SHARED_LIBS]]]
# default: rmake Debug default False
# examples:
# rmake
# rmake Debug
# rmake Release
# rmake Debug my-profile
# rmake Release my-profile True

BUILD_TYPE=${1:-Debug}
CONAN_PROFILE=${2:-default}
BUILD_SHARED_LIBS=${3:-False}

if [ $BUILD_TYPE != Debug -a $BUILD_TYPE != Release ]
then
  echo "Invalid build configuration \"$BUILD_TYPE\". Please specify Debug or Release."
  exit 1
fi

all_conan_profiles=$(conan profile list)
if ! [[ $all_conan_profiles =~ $CONAN_PROFILE ]]
then
  echo "Invalid value for CONAN_PROFILE \"$CONAN_PROFILE\". Please specify one of the following:"
  echo $all_conan_profiles
  exit 1
fi

if [ $BUILD_SHARED_LIBS != True -a $BUILD_SHARED_LIBS != False ]
then
  echo "Invalid value for BUILD_SHARED_LIBS \"$BUILD_SHARED_LIBS\". Please specify True or False."
  exit 1
fi

echo "rmake configuration:"
echo " BUILD_TYPE        $BUILD_TYPE"
echo " CONAN_PROFILE     $CONAN_PROFILE"
echo " BUILD_SHARED_LIBS $BUILD_SHARED_LIBS"
echo

if [ ! -f "./build" ]; then mkdir build 2>/dev/null; fi

cd build
if [ ! -f "./$BUILD_TYPE" ]; then mkdir "./$BUILD_TYPE" 2>/dev/null; fi

cd $BUILD_TYPE

conan install ../../conanfile.py \
    --options "*:shared=$BUILD_SHARED_LIBS" \
    --options "Poco:enable_mongodb=False" \
    --options "Poco:enable_data_sqlite=False" \
    --profile $CONAN_PROFILE \
    --build outdated
cmake ../.. -G "Unix Makefiles" \
    -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
    -DSKIP_INSTALL_ALL=true \
    -DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS
# 8 threads available for parallel building
cmake --build . -- -j8
if [ $? != 0 ]
then
  echo 'Build failed. Not running unit tests.'
  exit 1
fi

ctest -C $BUILD_TYPE
if [ $? != 0 ]
then
  echo 'Unit tests failed.'
  exit 1
fi

# Store the current branch in variable : CurrentBranch
CurrentBranch=`git rev-parse --abbrev-ref HEAD`
case "${CurrentBranch}" in
 'master') Branch2Use="stable" ;;
 'Staging') Branch2Use="staging" ;;
 *)     Branch2Use="testing" ;;
esac

# Install into the Conan cache
conan create ../.. branch/${Branch2Use} \
  --json conan-install.json \
  --build outdated \
  --options "*:shared=$BUILD_SHARED_LIBS" \
  --options "Poco:enable_mongodb=False" \
  --options "Poco:enable_data_sqlite=False" \
  --settings build_type=$BUILD_TYPE \
  --profile $CONAN_PROFILE
if [ $? != 0 ]
then
  echo 'conan create failed.'
  exit 1
fi

echo "Building stage from conan cache"
../../BranchSDK/tools/stage.py
if [ $? != 0 ]
then
  echo 'stage.py failed.'
  exit 1
fi

cd ../..

# Lint
pushd .
cd BranchSDK/src
../tools/cpplint.py --linelength=120 --filter=-build/namespaces,-runtime/references --recursive --repository=. ./BranchIO/*.*
if [ $? != 0 ]
then
  echo 'Linting failed.'
  exit 1
fi
popd

# build docs
cd BranchSDK
doxygen
cd ..
